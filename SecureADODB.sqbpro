<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="F:/Archive/Business/FID/PolMaFID/Drafts/Knowledge Management System/VBA/SecureADODB/RDVBA-examples/SecureADODB.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1677"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,13:mainpeople_insert"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="mock" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="140"/><column index="3" value="40"/><column index="4" value="54"/><column index="5" value="274"/><column index="6" value="200"/><column index="7" value="178"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="people" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="78"/><column index="3" value="75"/><column index="4" value="274"/><column index="5" value="200"/><column index="6" value="178"/><column index="7" value="73"/><column index="8" value="144"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="people_insert" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="136"/><column index="2" value="78"/><column index="3" value="75"/><column index="4" value="40"/><column index="5" value="54"/><column index="6" value="41"/><column index="7" value="59"/><column index="8" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="45"/><column index="2" value="40"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">INSERT INTO
	people(id, first_name, last_name)
WITH
	indexed_names AS (
		SELECT *, instr(full_name, &quot; &quot;) AS split_index, length(full_name) AS name_length FROM mock
	)
SELECT
	id,
	substr(full_name, 1, split_index - 1) AS first_name,
	substr(full_name, split_index + 1) AS last_name
	FROM indexed_names;</sql><sql name="SQL 2">WITH
	coms AS (
		SELECT * FROM com_regular_companies LIMIT 10000
	),
	coms_cats AS (
		SELECT coms.url_path, cats.value FROM coms, json_each(cat) AS cats
	)

SELECT * FROM coms_cats;
</sql><sql name="SQL 5">CREATE TABLE &quot;mock&quot; (
	&quot;id&quot;	INTEGER,
	&quot;full_name&quot;	TEXT,
	&quot;email&quot;	TEXT,
	&quot;gender&quot;	TEXT,
	&quot;age&quot;	NUMERIC,
	&quot;country&quot;	TEXT,
	&quot;domain&quot;	TEXT
);

</sql><sql name="SQL 6">DROP TABLE IF EXISTS people; 

CREATE TABLE &quot;people&quot; (
	&quot;id&quot;	INTEGER,
	&quot;first_name&quot;	VARCHAR(255),
	&quot;last_name&quot;	VARCHAR(255),
	&quot;age&quot; INTEGER CHECK(18 &lt;= &quot;age&quot; &lt;= 80),
	&quot;gender&quot;	VARCHAR(10),
	&quot;email&quot;	VARCHAR(255),
	&quot;country&quot;	VARCHAR(255),
	&quot;domain&quot;	VARCHAR(255),
	PRIMARY KEY(&quot;id&quot; AUTOINCREMENT)
);</sql><sql name="SQL 7">DROP TABLE IF EXISTS mock;

CREATE TABLE &quot;mock&quot; (
	&quot;id&quot;	INTEGER,
	&quot;full_name&quot;	VARCHAR(255),
	&quot;age&quot; VARCHAR(10),
	&quot;gender&quot;	VARCHAR(10),
	&quot;email&quot;	VARCHAR(255),
	&quot;country&quot;	VARCHAR(255),
	&quot;domain&quot;	VARCHAR(255)
);</sql><sql name="SQL 8">INSERT INTO
	people(first_name, last_name, age, gender, email, country, domain)
WITH
	indexed_records AS (
		SELECT
			age, gender, email, country, domain,
			instr(email, &quot;.&quot;) AS split_first_name, instr(email, &quot;@&quot;) AS split_last_name FROM mock
	)
SELECT
	substr(email, 1, split_first_name - 1) AS first_name,
	substr(email, split_first_name + 1, split_last_name - split_first_name - 1) AS last_name,
	age, gender, email, country, domain
	FROM indexed_records;

</sql><sql name="SQL 9">		SELECT
			age, gender, email, country, domain,
			instr(email, &quot;.&quot;) AS split_first_name, instr(email, &quot;@&quot;) AS split_last_name FROM mock;
</sql><sql name="SQL 10">SELECT country, count(*) AS counter FROM people GROUP BY country ORDER BY counter DESC;</sql><sql name="SQL 10">CREATE TABLE &quot;people_insert&quot; (
	&quot;id&quot;	INTEGER,
	&quot;first_name&quot;	VARCHAR(255),
	&quot;last_name&quot;	VARCHAR(255),
	&quot;age&quot;	INTEGER CHECK(18 &lt;= &quot;age&quot; &lt;= 80),
	&quot;gender&quot;	VARCHAR(10),
	&quot;email&quot;	VARCHAR(255),
	&quot;country&quot;	VARCHAR(255),
	&quot;domain&quot;	VARCHAR(255),
	PRIMARY KEY(&quot;id&quot; AUTOINCREMENT)
);</sql><sql name="SQL 11">INSERT INTO people_insert (id, first_name, last_name, age, gender, email, country, domain) VALUES (1, 'first_name', 'last_name', 32, 'male', 'first_name.last_name@domain.com', 'Country', 'domain.com');</sql><current_tab id="9"/></tab_sql></sqlb_project>
